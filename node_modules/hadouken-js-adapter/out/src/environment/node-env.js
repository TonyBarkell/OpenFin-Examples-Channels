"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = require("fs");
const crypto_1 = require("crypto");
const port_discovery_1 = require("../transport/port-discovery");
const transport_errors_1 = require("../transport/transport-errors");
class NodeEnvironment {
    constructor() {
        this.messageCounter = 0;
        this.writeToken = (path, token) => {
            return new Promise(resolve => {
                fs_1.writeFile(path, token, () => resolve(token));
            });
        };
        this.retrievePort = (config) => {
            const pd = new port_discovery_1.PortDiscovery(config, this);
            return pd.retrievePort();
        };
        this.getNextMessageId = () => {
            // tslint:disable-next-line
            return this.messageCounter++;
        };
        this.createChildWindow = (options) => {
            throw new transport_errors_1.NotImplementedError('Not Implemented');
        };
        this.getRandomId = () => {
            return crypto_1.randomBytes(16).toString('hex');
        };
        this.isWindowExists = (uuid, name) => {
            throw new transport_errors_1.NotImplementedError('Not Implemented');
        };
    }
}
exports.default = NodeEnvironment;
//# sourceMappingURL=node-env.js.map