"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const wire_1 = require("./wire");
class DisconnectedError extends Error {
    constructor(readyState) {
        super('Expected websocket state OPEN but found ' + wire_1.READY_STATE[readyState]);
        this.readyState = readyState;
    }
}
exports.DisconnectedError = DisconnectedError;
class UnexpectedActionError extends Error {
}
exports.UnexpectedActionError = UnexpectedActionError;
class DuplicateCorrelationError extends Error {
}
exports.DuplicateCorrelationError = DuplicateCorrelationError;
class NoAckError extends Error {
}
exports.NoAckError = NoAckError;
class NotImplementedError extends Error {
}
exports.NotImplementedError = NotImplementedError;
class NotSupportedError extends Error {
}
exports.NotSupportedError = NotSupportedError;
class RuntimeError extends Error {
    constructor(data) {
        const payload = data.payload || data;
        const { reason, error } = payload;
        super(reason);
        this.name = 'RuntimeError';
        if (error && error.stack) {
            this.stack = error.stack;
        }
    }
}
exports.RuntimeError = RuntimeError;
//# sourceMappingURL=transport-errors.js.map